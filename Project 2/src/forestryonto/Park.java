package forestryonto;

import java.net.URI;
import java.util.Collection;
import javax.xml.datatype.XMLGregorianCalendar;

import org.protege.owl.codegeneration.WrappedIndividual;

import org.semanticweb.owlapi.model.OWLNamedIndividual;
import org.semanticweb.owlapi.model.OWLOntology;

/**
 * 
 * <p>
 * Generated by Protege (http://protege.stanford.edu). <br>
 * Source Class: Park <br>
 * @version generated on Thu Mar 25 04:42:12 PKT 2021 by developer
 */

public interface Park extends Borough {

    /* ***************************************************
     * Property http://www.forestryspaces.org/onto#hasBorough
     */
     
    /**
     * Gets all property values for the hasBorough property.<p>
     * 
     * @returns a collection of values for the hasBorough property.
     */
    Collection<? extends Borough> getHasBorough();

    /**
     * Checks if the class has a hasBorough property value.<p>
     * 
     * @return true if there is a hasBorough property value.
     */
    boolean hasHasBorough();

    /**
     * Adds a hasBorough property value.<p>
     * 
     * @param newHasBorough the hasBorough property value to be added
     */
    void addHasBorough(Borough newHasBorough);

    /**
     * Removes a hasBorough property value.<p>
     * 
     * @param oldHasBorough the hasBorough property value to be removed.
     */
    void removeHasBorough(Borough oldHasBorough);


    /* ***************************************************
     * Property http://www.forestryspaces.org/onto#hasSanctuary
     */
     
    /**
     * Gets all property values for the hasSanctuary property.<p>
     * 
     * @returns a collection of values for the hasSanctuary property.
     */
    Collection<? extends Sanctuary> getHasSanctuary();

    /**
     * Checks if the class has a hasSanctuary property value.<p>
     * 
     * @return true if there is a hasSanctuary property value.
     */
    boolean hasHasSanctuary();

    /**
     * Adds a hasSanctuary property value.<p>
     * 
     * @param newHasSanctuary the hasSanctuary property value to be added
     */
    void addHasSanctuary(Sanctuary newHasSanctuary);

    /**
     * Removes a hasSanctuary property value.<p>
     * 
     * @param oldHasSanctuary the hasSanctuary property value to be removed.
     */
    void removeHasSanctuary(Sanctuary oldHasSanctuary);


    /* ***************************************************
     * Property http://www.forestryspaces.org/onto#hasStreet
     */
     
    /**
     * Gets all property values for the hasStreet property.<p>
     * 
     * @returns a collection of values for the hasStreet property.
     */
    Collection<? extends Street> getHasStreet();

    /**
     * Checks if the class has a hasStreet property value.<p>
     * 
     * @return true if there is a hasStreet property value.
     */
    boolean hasHasStreet();

    /**
     * Adds a hasStreet property value.<p>
     * 
     * @param newHasStreet the hasStreet property value to be added
     */
    void addHasStreet(Street newHasStreet);

    /**
     * Removes a hasStreet property value.<p>
     * 
     * @param oldHasStreet the hasStreet property value to be removed.
     */
    void removeHasStreet(Street oldHasStreet);


    /* ***************************************************
     * Property http://www.forestryspaces.org/onto#hasZone
     */
     
    /**
     * Gets all property values for the hasZone property.<p>
     * 
     * @returns a collection of values for the hasZone property.
     */
    Collection<? extends ParkZone> getHasZone();

    /**
     * Checks if the class has a hasZone property value.<p>
     * 
     * @return true if there is a hasZone property value.
     */
    boolean hasHasZone();

    /**
     * Adds a hasZone property value.<p>
     * 
     * @param newHasZone the hasZone property value to be added
     */
    void addHasZone(ParkZone newHasZone);

    /**
     * Removes a hasZone property value.<p>
     * 
     * @param oldHasZone the hasZone property value to be removed.
     */
    void removeHasZone(ParkZone oldHasZone);


    /* ***************************************************
     * Property http://www.forestryspaces.org/onto#hasAcres
     */
     
    /**
     * Gets all property values for the hasAcres property.<p>
     * 
     * @returns a collection of values for the hasAcres property.
     */
    Collection<? extends String> getHasAcres();

    /**
     * Checks if the class has a hasAcres property value.<p>
     * 
     * @return true if there is a hasAcres property value.
     */
    boolean hasHasAcres();

    /**
     * Adds a hasAcres property value.<p>
     * 
     * @param newHasAcres the hasAcres property value to be added
     */
    void addHasAcres(String newHasAcres);

    /**
     * Removes a hasAcres property value.<p>
     * 
     * @param oldHasAcres the hasAcres property value to be removed.
     */
    void removeHasAcres(String oldHasAcres);



    /* ***************************************************
     * Property http://www.forestryspaces.org/onto#hasDirection
     */
     
    /**
     * Gets all property values for the hasDirection property.<p>
     * 
     * @returns a collection of values for the hasDirection property.
     */
    Collection<? extends String> getHasDirection();

    /**
     * Checks if the class has a hasDirection property value.<p>
     * 
     * @return true if there is a hasDirection property value.
     */
    boolean hasHasDirection();

    /**
     * Adds a hasDirection property value.<p>
     * 
     * @param newHasDirection the hasDirection property value to be added
     */
    void addHasDirection(String newHasDirection);

    /**
     * Removes a hasDirection property value.<p>
     * 
     * @param oldHasDirection the hasDirection property value to be removed.
     */
    void removeHasDirection(String oldHasDirection);



    /* ***************************************************
     * Property http://www.forestryspaces.org/onto#hasName
     */
     
    /**
     * Gets all property values for the hasName property.<p>
     * 
     * @returns a collection of values for the hasName property.
     */
    Collection<? extends String> getHasName();

    /**
     * Checks if the class has a hasName property value.<p>
     * 
     * @return true if there is a hasName property value.
     */
    boolean hasHasName();

    /**
     * Adds a hasName property value.<p>
     * 
     * @param newHasName the hasName property value to be added
     */
    void addHasName(String newHasName);

    /**
     * Removes a hasName property value.<p>
     * 
     * @param oldHasName the hasName property value to be removed.
     */
    void removeHasName(String oldHasName);



    /* ***************************************************
     * Common interfaces
     */

    OWLNamedIndividual getOwlIndividual();

    OWLOntology getOwlOntology();

    void delete();

}
