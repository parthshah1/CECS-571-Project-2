package forestryonto.impl;

import forestryonto.*;


import java.net.URI;
import java.util.Collection;
import javax.xml.datatype.XMLGregorianCalendar;

import org.protege.owl.codegeneration.WrappedIndividual;
import org.protege.owl.codegeneration.impl.WrappedIndividualImpl;

import org.protege.owl.codegeneration.inference.CodeGenerationInference;

import org.semanticweb.owlapi.model.IRI;
import org.semanticweb.owlapi.model.OWLOntology;


/**
 * Generated by Protege (http://protege.stanford.edu).<br>
 * Source Class: DefaultPark <br>
 */
public class DefaultPark extends WrappedIndividualImpl implements Park {

    public DefaultPark(CodeGenerationInference inference, IRI iri) {
        super(inference, iri);
    }





    /* ***************************************************
     * Object Property http://www.forestryspaces.org/onto#hasBorough
     */
     
    public Collection<? extends Borough> getHasBorough() {
        return getDelegate().getPropertyValues(getOwlIndividual(),
                                               Vocabulary.OBJECT_PROPERTY_HASBOROUGH,
                                               DefaultBorough.class);
    }

    public boolean hasHasBorough() {
	   return !getHasBorough().isEmpty();
    }

    public void addHasBorough(Borough newHasBorough) {
        getDelegate().addPropertyValue(getOwlIndividual(),
                                       Vocabulary.OBJECT_PROPERTY_HASBOROUGH,
                                       newHasBorough);
    }

    public void removeHasBorough(Borough oldHasBorough) {
        getDelegate().removePropertyValue(getOwlIndividual(),
                                          Vocabulary.OBJECT_PROPERTY_HASBOROUGH,
                                          oldHasBorough);
    }


    /* ***************************************************
     * Object Property http://www.forestryspaces.org/onto#hasSanctuary
     */
     
    public Collection<? extends Sanctuary> getHasSanctuary() {
        return getDelegate().getPropertyValues(getOwlIndividual(),
                                               Vocabulary.OBJECT_PROPERTY_HASSANCTUARY,
                                               DefaultSanctuary.class);
    }

    public boolean hasHasSanctuary() {
	   return !getHasSanctuary().isEmpty();
    }

    public void addHasSanctuary(Sanctuary newHasSanctuary) {
        getDelegate().addPropertyValue(getOwlIndividual(),
                                       Vocabulary.OBJECT_PROPERTY_HASSANCTUARY,
                                       newHasSanctuary);
    }

    public void removeHasSanctuary(Sanctuary oldHasSanctuary) {
        getDelegate().removePropertyValue(getOwlIndividual(),
                                          Vocabulary.OBJECT_PROPERTY_HASSANCTUARY,
                                          oldHasSanctuary);
    }


    /* ***************************************************
     * Object Property http://www.forestryspaces.org/onto#hasStreet
     */
     
    public Collection<? extends Street> getHasStreet() {
        return getDelegate().getPropertyValues(getOwlIndividual(),
                                               Vocabulary.OBJECT_PROPERTY_HASSTREET,
                                               DefaultStreet.class);
    }

    public boolean hasHasStreet() {
	   return !getHasStreet().isEmpty();
    }

    public void addHasStreet(Street newHasStreet) {
        getDelegate().addPropertyValue(getOwlIndividual(),
                                       Vocabulary.OBJECT_PROPERTY_HASSTREET,
                                       newHasStreet);
    }

    public void removeHasStreet(Street oldHasStreet) {
        getDelegate().removePropertyValue(getOwlIndividual(),
                                          Vocabulary.OBJECT_PROPERTY_HASSTREET,
                                          oldHasStreet);
    }


    /* ***************************************************
     * Object Property http://www.forestryspaces.org/onto#hasZone
     */
     
    public Collection<? extends ParkZone> getHasZone() {
        return getDelegate().getPropertyValues(getOwlIndividual(),
                                               Vocabulary.OBJECT_PROPERTY_HASZONE,
                                               DefaultParkZone.class);
    }

    public boolean hasHasZone() {
	   return !getHasZone().isEmpty();
    }

    public void addHasZone(ParkZone newHasZone) {
        getDelegate().addPropertyValue(getOwlIndividual(),
                                       Vocabulary.OBJECT_PROPERTY_HASZONE,
                                       newHasZone);
    }

    public void removeHasZone(ParkZone oldHasZone) {
        getDelegate().removePropertyValue(getOwlIndividual(),
                                          Vocabulary.OBJECT_PROPERTY_HASZONE,
                                          oldHasZone);
    }


    /* ***************************************************
     * Data Property http://www.forestryspaces.org/onto#hasAcres
     */
     
    public Collection<? extends String> getHasAcres() {
		return getDelegate().getPropertyValues(getOwlIndividual(), Vocabulary.DATA_PROPERTY_HASACRES, String.class);
    }

    public boolean hasHasAcres() {
		return !getHasAcres().isEmpty();
    }

    public void addHasAcres(String newHasAcres) {
	    getDelegate().addPropertyValue(getOwlIndividual(), Vocabulary.DATA_PROPERTY_HASACRES, newHasAcres);
    }

    public void removeHasAcres(String oldHasAcres) {
		getDelegate().removePropertyValue(getOwlIndividual(), Vocabulary.DATA_PROPERTY_HASACRES, oldHasAcres);
    }


    /* ***************************************************
     * Data Property http://www.forestryspaces.org/onto#hasDirection
     */
     
    public Collection<? extends String> getHasDirection() {
		return getDelegate().getPropertyValues(getOwlIndividual(), Vocabulary.DATA_PROPERTY_HASDIRECTION, String.class);
    }

    public boolean hasHasDirection() {
		return !getHasDirection().isEmpty();
    }

    public void addHasDirection(String newHasDirection) {
	    getDelegate().addPropertyValue(getOwlIndividual(), Vocabulary.DATA_PROPERTY_HASDIRECTION, newHasDirection);
    }

    public void removeHasDirection(String oldHasDirection) {
		getDelegate().removePropertyValue(getOwlIndividual(), Vocabulary.DATA_PROPERTY_HASDIRECTION, oldHasDirection);
    }


    /* ***************************************************
     * Data Property http://www.forestryspaces.org/onto#hasName
     */
     
    public Collection<? extends String> getHasName() {
		return getDelegate().getPropertyValues(getOwlIndividual(), Vocabulary.DATA_PROPERTY_HASNAME, String.class);
    }

    public boolean hasHasName() {
		return !getHasName().isEmpty();
    }

    public void addHasName(String newHasName) {
	    getDelegate().addPropertyValue(getOwlIndividual(), Vocabulary.DATA_PROPERTY_HASNAME, newHasName);
    }

    public void removeHasName(String oldHasName) {
		getDelegate().removePropertyValue(getOwlIndividual(), Vocabulary.DATA_PROPERTY_HASNAME, oldHasName);
    }


}
