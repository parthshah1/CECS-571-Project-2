package forestryonto;

import java.net.URI;
import java.util.Collection;
import javax.xml.datatype.XMLGregorianCalendar;

import org.protege.owl.codegeneration.WrappedIndividual;

import org.semanticweb.owlapi.model.OWLNamedIndividual;
import org.semanticweb.owlapi.model.OWLOntology;

/**
 * 
 * <p>
 * Generated by Protege (http://protege.stanford.edu). <br>
 * Source Class: PlantingSpace <br>
 */

public interface PlantingSpace extends WrappedIndividual {

    /* ***************************************************
     * Property http://www.forestryspaces.org/onto#hasBorough
     */
     
    /**
     * Gets all property values for the hasBorough property.<p>
     * 
     * @returns a collection of values for the hasBorough property.
     */
    Collection<? extends Borough> getHasBorough();

    /**
     * Checks if the class has a hasBorough property value.<p>
     * 
     * @return true if there is a hasBorough property value.
     */
    boolean hasHasBorough();

    /**
     * Adds a hasBorough property value.<p>
     * 
     * @param newHasBorough the hasBorough property value to be added
     */
    void addHasBorough(Borough newHasBorough);

    /**
     * Removes a hasBorough property value.<p>
     * 
     * @param oldHasBorough the hasBorough property value to be removed.
     */
    void removeHasBorough(Borough oldHasBorough);


    /* ***************************************************
     * Property http://www.forestryspaces.org/onto#hasJurisdiction
     */
     
    /**
     * Gets all property values for the hasJurisdiction property.<p>
     * 
     * @returns a collection of values for the hasJurisdiction property.
     */
    Collection<? extends Jurisdiction> getHasJurisdiction();

    /**
     * Checks if the class has a hasJurisdiction property value.<p>
     * 
     * @return true if there is a hasJurisdiction property value.
     */
    boolean hasHasJurisdiction();

    /**
     * Adds a hasJurisdiction property value.<p>
     * 
     * @param newHasJurisdiction the hasJurisdiction property value to be added
     */
    void addHasJurisdiction(Jurisdiction newHasJurisdiction);

    /**
     * Removes a hasJurisdiction property value.<p>
     * 
     * @param oldHasJurisdiction the hasJurisdiction property value to be removed.
     */
    void removeHasJurisdiction(Jurisdiction oldHasJurisdiction);


    /* ***************************************************
     * Property http://www.forestryspaces.org/onto#hasPark
     */
     
    /**
     * Gets all property values for the hasPark property.<p>
     * 
     * @returns a collection of values for the hasPark property.
     */
    Collection<? extends Park> getHasPark();

    /**
     * Checks if the class has a hasPark property value.<p>
     * 
     * @return true if there is a hasPark property value.
     */
    boolean hasHasPark();

    /**
     * Adds a hasPark property value.<p>
     * 
     * @param newHasPark the hasPark property value to be added
     */
    void addHasPark(Park newHasPark);

    /**
     * Removes a hasPark property value.<p>
     * 
     * @param oldHasPark the hasPark property value to be removed.
     */
    void removeHasPark(Park oldHasPark);


    /* ***************************************************
     * Property http://www.forestryspaces.org/onto#hasSite
     */
     
    /**
     * Gets all property values for the hasSite property.<p>
     * 
     * @returns a collection of values for the hasSite property.
     */
    Collection<? extends PSSite> getHasSite();

    /**
     * Checks if the class has a hasSite property value.<p>
     * 
     * @return true if there is a hasSite property value.
     */
    boolean hasHasSite();

    /**
     * Adds a hasSite property value.<p>
     * 
     * @param newHasSite the hasSite property value to be added
     */
    void addHasSite(PSSite newHasSite);

    /**
     * Removes a hasSite property value.<p>
     * 
     * @param oldHasSite the hasSite property value to be removed.
     */
    void removeHasSite(PSSite oldHasSite);


    /* ***************************************************
     * Property http://www.forestryspaces.org/onto#hasStatus
     */
     
    /**
     * Gets all property values for the hasStatus property.<p>
     * 
     * @returns a collection of values for the hasStatus property.
     */
    Collection<? extends PSStatus> getHasStatus();

    /**
     * Checks if the class has a hasStatus property value.<p>
     * 
     * @return true if there is a hasStatus property value.
     */
    boolean hasHasStatus();

    /**
     * Adds a hasStatus property value.<p>
     * 
     * @param newHasStatus the hasStatus property value to be added
     */
    void addHasStatus(PSStatus newHasStatus);

    /**
     * Removes a hasStatus property value.<p>
     * 
     * @param oldHasStatus the hasStatus property value to be removed.
     */
    void removeHasStatus(PSStatus oldHasStatus);


    /* ***************************************************
     * Property http://www.forestryspaces.org/onto#hasCommunityBoard
     */
     
    /**
     * Gets all property values for the hasCommunityBoard property.<p>
     * 
     * @returns a collection of values for the hasCommunityBoard property.
     */
    Collection<? extends String> getHasCommunityBoard();

    /**
     * Checks if the class has a hasCommunityBoard property value.<p>
     * 
     * @return true if there is a hasCommunityBoard property value.
     */
    boolean hasHasCommunityBoard();

    /**
     * Adds a hasCommunityBoard property value.<p>
     * 
     * @param newHasCommunityBoard the hasCommunityBoard property value to be added
     */
    void addHasCommunityBoard(String newHasCommunityBoard);

    /**
     * Removes a hasCommunityBoard property value.<p>
     * 
     * @param oldHasCommunityBoard the hasCommunityBoard property value to be removed.
     */
    void removeHasCommunityBoard(String oldHasCommunityBoard);



    /* ***************************************************
     * Property http://www.forestryspaces.org/onto#hasCreatedDate
     */
     
    /**
     * Gets all property values for the hasCreatedDate property.<p>
     * 
     * @returns a collection of values for the hasCreatedDate property.
     */
    Collection<? extends String> getHasCreatedDate();

    /**
     * Checks if the class has a hasCreatedDate property value.<p>
     * 
     * @return true if there is a hasCreatedDate property value.
     */
    boolean hasHasCreatedDate();

    /**
     * Adds a hasCreatedDate property value.<p>
     * 
     * @param newHasCreatedDate the hasCreatedDate property value to be added
     */
    void addHasCreatedDate(String newHasCreatedDate);

    /**
     * Removes a hasCreatedDate property value.<p>
     * 
     * @param oldHasCreatedDate the hasCreatedDate property value to be removed.
     */
    void removeHasCreatedDate(String oldHasCreatedDate);



    /* ***************************************************
     * Property http://www.forestryspaces.org/onto#hasGeometry
     */
     
    /**
     * Gets all property values for the hasGeometry property.<p>
     * 
     * @returns a collection of values for the hasGeometry property.
     */
    Collection<? extends String> getHasGeometry();

    /**
     * Checks if the class has a hasGeometry property value.<p>
     * 
     * @return true if there is a hasGeometry property value.
     */
    boolean hasHasGeometry();

    /**
     * Adds a hasGeometry property value.<p>
     * 
     * @param newHasGeometry the hasGeometry property value to be added
     */
    void addHasGeometry(String newHasGeometry);

    /**
     * Removes a hasGeometry property value.<p>
     * 
     * @param oldHasGeometry the hasGeometry property value to be removed.
     */
    void removeHasGeometry(String oldHasGeometry);



    /* ***************************************************
     * Property http://www.forestryspaces.org/onto#hasLocation
     */
     
    /**
     * Gets all property values for the hasLocation property.<p>
     * 
     * @returns a collection of values for the hasLocation property.
     */
    Collection<? extends String> getHasLocation();

    /**
     * Checks if the class has a hasLocation property value.<p>
     * 
     * @return true if there is a hasLocation property value.
     */
    boolean hasHasLocation();

    /**
     * Adds a hasLocation property value.<p>
     * 
     * @param newHasLocation the hasLocation property value to be added
     */
    void addHasLocation(String newHasLocation);

    /**
     * Removes a hasLocation property value.<p>
     * 
     * @param oldHasLocation the hasLocation property value to be removed.
     */
    void removeHasLocation(String oldHasLocation);



    /* ***************************************************
     * Property http://www.forestryspaces.org/onto#hasName
     */
     
    /**
     * Gets all property values for the hasName property.<p>
     * 
     * @returns a collection of values for the hasName property.
     */
    Collection<? extends String> getHasName();

    /**
     * Checks if the class has a hasName property value.<p>
     * 
     * @return true if there is a hasName property value.
     */
    boolean hasHasName();

    /**
     * Adds a hasName property value.<p>
     * 
     * @param newHasName the hasName property value to be added
     */
    void addHasName(String newHasName);

    /**
     * Removes a hasName property value.<p>
     * 
     * @param oldHasName the hasName property value to be removed.
     */
    void removeHasName(String oldHasName);



    /* ***************************************************
     * Property http://www.forestryspaces.org/onto#hasObjectID
     */
     
    /**
     * Gets all property values for the hasObjectID property.<p>
     * 
     * @returns a collection of values for the hasObjectID property.
     */
    Collection<? extends String> getHasObjectID();

    /**
     * Checks if the class has a hasObjectID property value.<p>
     * 
     * @return true if there is a hasObjectID property value.
     */
    boolean hasHasObjectID();

    /**
     * Adds a hasObjectID property value.<p>
     * 
     * @param newHasObjectID the hasObjectID property value to be added
     */
    void addHasObjectID(String newHasObjectID);

    /**
     * Removes a hasObjectID property value.<p>
     * 
     * @param oldHasObjectID the hasObjectID property value to be removed.
     */
    void removeHasObjectID(String oldHasObjectID);



    /* ***************************************************
     * Property http://www.forestryspaces.org/onto#hasUpdatedDate
     */
     
    /**
     * Gets all property values for the hasUpdatedDate property.<p>
     * 
     * @returns a collection of values for the hasUpdatedDate property.
     */
    Collection<? extends String> getHasUpdatedDate();

    /**
     * Checks if the class has a hasUpdatedDate property value.<p>
     * 
     * @return true if there is a hasUpdatedDate property value.
     */
    boolean hasHasUpdatedDate();

    /**
     * Adds a hasUpdatedDate property value.<p>
     * 
     * @param newHasUpdatedDate the hasUpdatedDate property value to be added
     */
    void addHasUpdatedDate(String newHasUpdatedDate);

    /**
     * Removes a hasUpdatedDate property value.<p>
     * 
     * @param oldHasUpdatedDate the hasUpdatedDate property value to be removed.
     */
    void removeHasUpdatedDate(String oldHasUpdatedDate);



    /* ***************************************************
     * Common interfaces
     */

    OWLNamedIndividual getOwlIndividual();

    OWLOntology getOwlOntology();

    void delete();

}
