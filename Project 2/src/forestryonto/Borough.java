package forestryonto;

import java.net.URI;
import java.util.Collection;
import javax.xml.datatype.XMLGregorianCalendar;

import org.protege.owl.codegeneration.WrappedIndividual;

import org.semanticweb.owlapi.model.OWLNamedIndividual;
import org.semanticweb.owlapi.model.OWLOntology;

/**
 * 
 * <p>
 * Generated by Protege (http://protege.stanford.edu). <br>
 * Source Class: Borough <br>
 */

public interface Borough extends WrappedIndividual {

    /* ***************************************************
     * Property http://www.forestryspaces.org/onto#hasStreet
     */
     
    /**
     * Gets all property values for the hasStreet property.<p>
     * 
     * @returns a collection of values for the hasStreet property.
     */
    Collection<? extends Street> getHasStreet();

    /**
     * Checks if the class has a hasStreet property value.<p>
     * 
     * @return true if there is a hasStreet property value.
     */
    boolean hasHasStreet();

    /**
     * Adds a hasStreet property value.<p>
     * 
     * @param newHasStreet the hasStreet property value to be added
     */
    void addHasStreet(Street newHasStreet);

    /**
     * Removes a hasStreet property value.<p>
     * 
     * @param oldHasStreet the hasStreet property value to be removed.
     */
    void removeHasStreet(Street oldHasStreet);


    /* ***************************************************
     * Property http://www.forestryspaces.org/onto#hasName
     */
     
    /**
     * Gets all property values for the hasName property.<p>
     * 
     * @returns a collection of values for the hasName property.
     */
    Collection<? extends String> getHasName();

    /**
     * Checks if the class has a hasName property value.<p>
     * 
     * @return true if there is a hasName property value.
     */
    boolean hasHasName();

    /**
     * Adds a hasName property value.<p>
     * 
     * @param newHasName the hasName property value to be added
     */
    void addHasName(String newHasName);

    /**
     * Removes a hasName property value.<p>
     * 
     * @param oldHasName the hasName property value to be removed.
     */
    void removeHasName(String oldHasName);



    /* ***************************************************
     * Common interfaces
     */

    OWLNamedIndividual getOwlIndividual();

    OWLOntology getOwlOntology();

    void delete();

}
